name: Deploy SPE Infrastructure to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  AZURE_RESOURCE_GROUP: SharePointEmbedded
  AZURE_LOCATION: westus2
  DOTNET_VERSION: '8.0.x'
  APP_SERVICE_NAME: spe-api-dev-67e2xz

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --configuration Release --logger "console;verbosity=detailed" --logger trx --collect:"XPlat Code Coverage" --verbosity normal
      env:
        USE_FAKE_GRAPH: 1

    - name: Publish API
      run: dotnet publish src/Spe.Bff.Api/Spe.Bff.Api.csproj -c Release -o ./publish

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: spe-api-build
        path: ./publish

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Monitoring Infrastructure
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
        template: ./monitoring/DeployMonitoring.bicep
        parameters: >
          appInsightsName=spe-insights-${{ github.event.inputs.environment || 'dev' }}
          logAnalyticsWorkspaceName=spe-logs-${{ github.event.inputs.environment || 'dev' }}
          criticalAlertsEmail=${{ secrets.CRITICAL_ALERTS_EMAIL }}
          performanceAlertsEmail=${{ secrets.PERFORMANCE_ALERTS_EMAIL }}
          slackWebhookUrl=${{ secrets.SLACK_WEBHOOK_URL }}
          teamsWebhookUrl=${{ secrets.TEAMS_WEBHOOK_URL }}

  deploy-api:
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-infrastructure]
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: spe-api-build
        path: ./publish

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_SERVICE_NAME }}
        package: ./publish

    - name: Update App Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ env.APP_SERVICE_NAME }}
        app-settings-json: |
          [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "${{ github.event.inputs.environment || 'dev' }}"
            },
            {
              "name": "UAMI_CLIENT_ID",
              "value": "${{ secrets.UAMI_CLIENT_ID }}"
            },
            {
              "name": "TENANT_ID",
              "value": "${{ secrets.TENANT_ID }}"
            },
            {
              "name": "API_APP_ID",
              "value": "${{ secrets.API_APP_ID }}"
            }
          ]

  run-integration-tests:
    runs-on: ubuntu-latest
    needs: deploy-api
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run Integration Tests
      run: |
        export BASE_URL=https://${{ env.APP_SERVICE_NAME }}.azurewebsites.net
        dotnet test tests/Spe.Bff.Api.Tests --configuration Release --logger trx
      env:
        ASPNETCORE_ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}
        USE_FAKE_GRAPH: 1